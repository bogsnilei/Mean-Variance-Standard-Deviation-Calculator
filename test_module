import unittest
from mean_var_std import calculate

class TestCalculateFunction(unittest.TestCase):

    def test_calculate(self):
        input_data = [1, 2, 3, 4, 5, 6, 7, 8, 9]
        
        # Expected output structure (simplified for illustration)
        expected_output = {
            'mean': {
                'axis0': [4, 5, 6],
                'axis1': [2, 5, 8],
                'flattened': 5
            },
            'variance': {
                'axis0': [6.666666666666667, 6.666666666666667, 6.666666666666667],
                'axis1': [6.666666666666667, 6.666666666666667, 6.666666666666667],
                'flattened': 6.666666666666667
            },
            'standard deviation': {
                'axis0': [2.581988897471611, 2.581988897471611, 2.581988897471611],
                'axis1': [2.581988897471611, 2.581988897471611, 2.581988897471611],
                'flattened': 2.581988897471611
            },
            'max': {
                'axis0': [7, 8, 9],
                'axis1': [3, 6, 9],
                'flattened': 9
            },
            'min': {
                'axis0': [1, 2, 3],
                'axis1': [1, 2, 3],
                'flattened': 1
            },
            'sum': {
                'axis0': [12, 15, 18],
                'axis1': [6, 15, 24],
                'flattened': 45
            }
        }

        result = calculate(input_data)
        self.assertEqual(result, expected_output)

if __name__ == '__main__':
    unittest.main()
